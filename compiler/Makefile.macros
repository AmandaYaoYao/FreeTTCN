# tools
CPP   = g++ -g -Wall
BISON = bison -v -t --report=all
FLEX  = flex -CF -s -p -b -8


# directories
GEN_DIR = gen
SRC_DIR = src
LIB_DIR = lib
TOP_DIR = ..


# files
PROG_NAME = freettcn
GRAMMAR_FILE = grammar.y
LEX_FILE = lex.l
CPP_FILES = exception.cpp file.cpp node.cpp list.cpp identifier.cpp \
	module.cpp typedef.cpp constdef.cpp templatedef.cpp modulepardef.cpp          \
	functiondef.cpp signaturedef.cpp testcasedef.cpp altstepdef.cpp importdef.cpp \
	groupdef.cpp extfunctiondef.cpp extconstdef.cpp                               \
	withstatement.cpp \
	tools.cpp \
	main.cpp


# defines
GRAMMAR_C_FILE := $(patsubst %.y,%.tab.c,$(GRAMMAR_FILE))
GRAMMAR_H_FILE := $(patsubst %.y,%.tab.h,$(GRAMMAR_FILE))
GRAMMAR_OUTPUT_FILE := $(patsubst %.y,%.output,$(GRAMMAR_FILE))
LEX_C_FILE := $(patsubst %.l,%.yy.c,$(LEX_FILE))
LEX_BACKUP_FILE := $(patsubst %.l,%.backup,$(LEX_FILE))
C_FILES = $(GRAMMAR_C_FILE) $(LEX_C_FILE)

C_O_FILES := $(patsubst %.c,%.o,$(C_FILES))
CPP_O_FILES := $(patsubst %.cpp,%.o,$(CPP_FILES))

O_FILES =  $(addprefix $(LIB_DIR)/, $(CPP_O_FILES) $(C_O_FILES))
