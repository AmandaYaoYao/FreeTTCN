#
# Copyright (C) 2007 Mateusz Pusz
#
# This file is part of freettcn (Free TTCN) usage example.

# This example is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This example is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this example; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA


PROG_NAME = ttcn_example
LIB_NAME = freettcn
MOD_FILES = ip.ttcn

# directories
MAIN_DIR = main
MOD_DIR = modules
PA_DIR = pa
SA_DIR = sa
CD_DIR = cd
CH_DIR = ch
TM_DIR = tm
TL_DIR = tl
LIB_DIRS = $(TM_DIR) $(PA_DIR) $(SA_DIR) $(CD_DIR) $(CH_DIR) $(TL_DIR)
DOC_DIR = doc
DIR_NAME = $(notdir $(PWD))


#
# tools
#
MAKE = make
CPP = g++ -g -Wall
AR = ar -c
CP = cp
RM = rm
SED = sed
ECHO = echo
TOUCH = touch
TAGS = etags --declarations --members
DOXYGEN = doxygen
TAR = tar

#
# directories
#
ifndef $(TOP_DIR)
TOP_DIR = .
endif
BIN_DIR = $(TOP_DIR)/bin
LIB_DIR = $(TOP_DIR)/../lib


#
# varaibles
#
MAKEFLAGS += -rR --no-print-directory

ifeq ($(BUILD_VERBOSE),1)
  quiet =
  Q =
else
  quiet=quiet_
  Q = @
endif

# If the user is running make -s (silent mode), suppress echoing of commands
ifneq ($(findstring s,$(MAKEFLAGS)),)
  quiet=silent_
endif


#
# Command template
#
# If quiet is set, only print short version of command
#
cmd = @$(if $($(quiet)$(1)),printf "$($(quiet)$(1))\n" &&) $($(1))



#
# Commands
#

# temporary commands used below
tmp_cmd_d    = $(CP) $*.d_ $*.d && \
               $(SED) -e 's/\#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d' -e 's/$$/ :/' < $*.d_ >> $*.d && \
	       $(RM) -f $*.d_

# start library compilation
quiet_cmd_make_lib = \nBUILD_LIB  $(BIN_DIR)/$@.a
      cmd_make_lib = $(MAKE) -C $@ TOP_DIR=$(TOP_DIR)/.. DIR_NAME=$@ lib

# start module compilation
quiet_cmd_make_mod = \nBUILD_MOD  $(addprefix $(BIN_DIR)/, $(patsubst %.ttcn,%.o,$(mod)))
      cmd_make_mod = $(MAKE) -C $(MOD_DIR) TOP_DIR=$(TOP_DIR)/.. MODULE=$(mod) mod

# start main compilation
quiet_cmd_make_main = \nBUILD_MAIN
      cmd_make_main = $(MAKE) -C $(MAIN_DIR) TOP_DIR=$(TOP_DIR)/.. all

# compile source file, create depend file *.d, insert *.o file to library <bindir>\<dirname>.a
quiet_cmd_cc_d_a = CC_D_A     $<
      cmd_cc_d_a = $(CPP) -MMD -MF $*.d_ $(INCLUDE_DIRS) -c $< -o $(@D)/$% && \
	           $(AR) -rs $@ $(@D)/$% && \
                   $(RM) -f $(@D)/$% && \
                   $(SED) -i 's,^.*/\(.*\.o\):,$(LIB_PATH)(\1):,' $*.d_ && \
                   $(tmp_cmd_d)

# compile source file, create depend file *.d
quiet_cmd_cc_d_o = CC_D_O     $<
      cmd_cc_d_o = $(CPP) -MMD -MF $*.d_ $(INCLUDE_DIRS) -c $< -o $@ && \
                   $(tmp_cmd_d)

# translate source TTCN module file to *.cpp
quiet_cmd_ttcn_cc = TTCN_CC    $<
      cmd_ttcn_cc = $(TOUCH) $@

# link program
quiet_cmd_link = LINK       $(BIN_DIR)/$(PROG_NAME)
      cmd_link = $(CPP) $(O_FILES) $(MODULES_O_FILES) -L$(LIB_DIR)/bin -l$(LIB_NAME) -L$(BIN_DIR) $(INCLUDE_LIBS) -o $(BIN_DIR)/$(PROG_NAME)
